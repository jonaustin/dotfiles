# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!
#
# mod1: alt
# mod4: super

set $mod Mod4

mode  "Passthrough Mode - Press $mod+F12 to exit" {
        bindsym $mod+F12 mode "default"
}
bindsym $mod+F12 mode "Passthrough Mode - Press $mod+F12 to exit"

# j4-make-config / gruvbox
# class                 border  backgr. text    indicator
client.focused          #3c3836 #32302f #fabd2f #fabd2f
client.focused_inactive #3c3836 #504945 #d5c4a1 #504945
client.unfocused        #3c3836 #504945 #d5c4a1 #504945
client.urgent           #7c6f64 #fabd2f #3c3836 #fabd2f

# set default desktop layout (default is tiling)
workspace_layout tabbed # <default|stacking|tabbed>

# Configure border style <normal|1pixel|pixel xx|none|pixel>
new_window pixel 1
new_float normal

# Hide borders
hide_edge_borders none

# change borders
#bindsym $mod+u border none
#bindsym $mod+y border pixel 1
#bindsym $mod+n border normal
# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 9
#font xft:Noto Mono 10

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec wezterm

# kill focused window
bindsym $mod+Shift+q kill
bindsym $mod+Shift+c kill

# start rofi (a program launcher)
bindsym Ctrl+space exec rofi -show run -display-run '❯ '

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
#bindsym $mod+Left focus left
#bindsym $mod+Down focus down
#bindsym $mod+Up focus up
#bindsym $mod+Right focus right

# move focused window
#bindsym $mod+Shift+j move left
#bindsym $mod+Shift+k move down
#bindsym $mod+Shift+l move up
#bindsym $mod+Shift+semicolon move right
bindsym $mod+Shift+h move left;exec notify-send 'move left'
bindsym $mod+Shift+j move down;exec notify-send 'move down'
bindsym $mod+Shift+k move up;exec notify-send 'move up'
bindsym $mod+Shift+l move right;exec notify-send 'move right'

# alternatively, you can use the cursor keys:
#bindsym $mod+Shift+Left move left
#bindsym $mod+Shift+Down move down
#bindsym $mod+Shift+Up move up
#bindsym $mod+Shift+Right move right
# note: my hor/vert is opposite of i3 defaults; makes more intuitive sense
bindsym $mod+v split h
bindsym $mod+Shift+v split v
bindsym $mod+Ctrl+q split toggle

# split in vertical orientation
#bindsym $mod+Shift+h split v
#bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+q layout stacking; exec notify-send 'stacking layout'
bindsym $mod+w layout tabbed; exec notify-send 'tabbed layout'
bindsym $mod+e layout toggle split; exec notify-send 'split layout toggle'

# toggle tiling / floating
bindsym $mod+Ctrl+Return floating toggle
#bindsym $mod+c exec "i3-plus smart_center 1830x2120,2030x2120,2230x2120"

# change focus between tiling / floating windows
#bindsym $mod+space focus mode_toggle

# toggle sticky
#bindsym $mod+Shift+s sticky toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+d focus child

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
# Make the currently focused window a scratchpad
bindsym $mod+Shift+Print move scratchpad
# Show the first scratchpad window
#bindsym $mod+minus scratchpad show
# note: just toggle floating to remove from scratchpad

# Automatic back-and-forth when switching to the current workspace
workspace_auto_back_and_forth yes

#navigate workspaces next / previous
bindsym $mod+Ctrl+Right workspace next
bindsym $mod+Ctrl+Left workspace prev

# workspaces
set $w1  "1"
set $w2  "2"
set $w3  "3"
set $w4  "4"
set $w5  "5"
set $w6  "6"
set $w7  "7"
set $w8  "8"
set $w9  "9"
set $w10 "10"

# switch to workspace
bindsym $mod+1 workspace $w1
bindsym $mod+2 workspace $w2
bindsym $mod+3 workspace $w3
bindsym $mod+4 workspace $w4
bindsym $mod+5 workspace $w5
bindsym $mod+6 workspace $w6
bindsym $mod+7 workspace $w7
bindsym $mod+8 workspace $w8
bindsym $mod+9 workspace $w9
bindsym $mod+0 workspace $w10
# bindsym Ctrl+1 workspace $w1
# bindsym Ctrl+2 workspace $w2
# bindsym Ctrl+3 workspace $w3
# bindsym Ctrl+4 workspace $w4
# bindsym Ctrl+5 workspace $w5
# bindsym Ctrl+6 workspace $w6
# bindsym Ctrl+7 workspace $w7
# bindsym Ctrl+8 workspace $w8
# bindsym Ctrl+9 workspace $w9
#bindsym Ctrl+0 workspace $w10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $w1
bindsym $mod+Shift+2 move container to workspace $w2
bindsym $mod+Shift+3 move container to workspace $w3
bindsym $mod+Shift+4 move container to workspace $w4
bindsym $mod+Shift+5 move container to workspace $w5
bindsym $mod+Shift+6 move container to workspace $w6
bindsym $mod+Shift+7 move container to workspace $w7
bindsym $mod+Shift+8 move container to workspace $w8
bindsym $mod+Shift+9 move container to workspace $w9
bindsym $mod+Shift+0 move container to workspace $w10

# Move workspace to other monitor
# bindsym $mod+Shift+s exec $HOME/bin/i3/switch-workspace.py # fixme: broken; see https://i3ipc-python.readthedocs.io/en/latest/ or maybe https://fmos.at/2016/06/30/my-i3-dual-screen-workflow/

# switch to workspace with urgent window automatically
for_window [urgent=latest] focus

# Disable window titles
for_window [class=".*"] border pixel 0


# reload the configuration file
bindsym $mod+Ctrl+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# switch to workspace with urgent window automatically
for_window [urgent=latest] focus

# Set shut down, restart and locking features
bindsym $mod+Ctrl+0 mode "$mode_system"
set $mode_system (l)ock, (e)xit, switch_(u)ser, (s)uspend, (h)ibernate, (r)eboot, (Shift+s)hutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id i3exit lock, mode "default"
    bindsym s exec --no-startup-id i3exit suspend, mode "default"
    bindsym u exec --no-startup-id i3exit switch_user, mode "default"
    bindsym e exec --no-startup-id i3exit logout, mode "default"
    bindsym h exec --no-startup-id i3exit hibernate, mode "default"
    bindsym r exec --no-startup-id i3exit reboot, mode "default"
    bindsym Shift+s exec --no-startup-id i3exit shutdown, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # resize.py
        # https://blog.cppse.nl/i3-floating-window-resize
        bindsym Shift+k exec $HOME/bin/resize.py inc
        bindsym Shift+j exec $HOME/bin/resize.py dec

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"

}

bindsym $mod+r mode "resize"

# dark aqua
set $based3    #002b36
set $based2    #073642
set $based1    #586e75
set $based0    #657b83
set $base0     #839496
set $base1     #93a1a1
set $base2     #eee8d5
set $base3     #fdf6e3
set $yellow    #b58900
set $orange    #cb4b16
set $red       #dc322f
set $magenta   #d33682
set $violet    #6c71c4
set $blue      #268bd2
set $cyan      #2aa198
set $green     #859900

## Start i3bar to display a workspace bar (plus the system information i3status
## finds out, if available)
#bar {
#        status_command $HOME/bin/i3spotify
#        #status_command py3status -c ~/.i3/i3status.conf
#        colors {
#          # j4-make-config / gruvbox
#          background #504945
#          statusline #d5c4a1
#          separator #3c3836
#          focused_workspace #3c3836 #32302f #fabd2f
#          active_workspace #3c3836 #504945 #d5c4a1
#          inactive_workspace #3c3836 #504945 #d5c4a1
#          urgent_workspace   #7c6f64 #fabd2f #3c3836

#          # dark aqua
#          #statusline $based0
#          #background $based3
#          #focused_workspace $based3 $based3 $base3
#          #inactive_workspace $based3 $based2 $base0
#          #active_workspace $based3 $based2 $base3
#          #urgent_workspace $based3 $magenta $base2
#        }
#}

# apps
#bindsym $mod+Shift+s exec "$HOME/bin/audio/spotify"
#bindsym $mod+Shift+x exec "chromium --force-device-scale-factor=1.4"
#bindsym $mod+Shift+f exec "chromium --force-device-scale-factor=0.9"
# bindsym --release $mod+t exec --no-startup-id xdotool key --clearmodifiers ctrl+t # open new tab
bindsym $mod+Shift+w exec "~/bin/walbg"
bindsym $mod+Ctrl+w exec "~/bin/walbg 4k > /tmp/wat" 
bindsym $mod+Mod1+w exec ~/bin/i3/bg-best.sh
bindsym $mod+Mod1+Ctrl+w exec ~/bin/i3/bg-delete.sh

# find windows (i3-wm-scripts)
bindsym $mod+s exec python ~/bin/i3/i3-wm-scripts/nextmatch.py spotify
bindsym $mod+Shift+x exec python ~/bin/i3/i3-wm-scripts/nextmatch.py '(chromium|firefox)'
#bindsym $mod+p exec python ~/bin/i3/i3-wm-scripts/nextmatch.py '(mupdf)'

# Screen brightness controls

bindsym XF86MonBrightnessUp exec "brightnessctl s 5%+; notify-send $(brightnessctl|grep '%'|sed 's/[^(]*//')"
bindsym XF86MonBrightnessDown exec "brightnessctl s 5%-; notify-send $(brightnessctl|grep '%'|sed 's/[^(]*//')"
bindsym $mod+XF86MonBrightnessUp exec "brightnessctl s 1%+; notify-send $(brightnessctl|grep '%'|sed 's/[^(]*//')"
bindsym $mod+XF86MonBrightnessDown  exec "brightnessctl s 1%-; notify-send $(brightnessctl|grep '%'|sed 's/[^(]*//')"
#bindsym Ctrl+Print exec "xbacklight -set 3"

# volume
bindsym $mod+Print exec $HOME/bin/audio/pulseaudio.sh --mute # mute toggle
bindsym $mod+minus exec $HOME/bin/audio/pulseaudio.sh --down3
bindsym $mod+Shift+minus exec $HOME/bin/audio/pulseaudio.sh --down
bindsym $mod+equal exec $HOME/bin/audio/pulseaudio.sh --up3
bindsym $mod+Shift+equal exec $HOME/bin/audio/pulseaudio.sh --up
bindsym Pause exec $HOME/bin/audio/pulseaudio.sh --up
bindsym $mod+Shift+s exec paswitch # switch output device for all sources

# Media player controls
bindsym XF86AudioPlay exec "playerctl -a play-pause"
bindsym $mod+space exec "playerctl -a play-pause"
bindsym XF86AudioNext exec "playerctl -a next"
bindsym $mod+Right exec "playerctl -a next"
bindsym XF86AudioPrev exec "playerctl -a previous"
bindsym $mod+Left exec "playerctl -a previous"

# firetv  # FIXME: for osmc
bindsym $mod+p exec "$HOME/bin/firetv play_pause"
bindsym $mod+shift+space exec "$HOME/bin/firetv play_pause"
bindsym $mod+Shift+Left exec "$HOME/bin/firetv rewind"
bindsym $mod+Shift+Right exec "$HOME/bin/firetv fast_forward"

# monitors
# maybe use --scale instead of --dpi
# bindsym $mod+n exec "xrandr --output DP4 --auto; ~/.fehbg"
# bindsym $mod+Shift+n exec "xrandr --output eDP1 --auto --output HDMI1 --off --output HDMI2 --off --output DP1 --off --dpi 193; ~/.fehbg"
#bindsym $mod+n exec "xrandr --output eDP1 --auto --dpi 193 --output DP1 --auto --rate 29.98 --dpi 163 --right-of eDP1; ~/.fehbg"
# bindsym $mod+m exec "xrandr --output eDP1 --off --output DP1 --auto --dpi 163; ~/.fehbg"
# bindsym $mod+m exec "xrandr --output eDP1 --off --output DP1 --auto --dpi 163; ~/.fehbg"
# use 30hz to fix horrible screen tearing bug
bindsym $mod+m exec "xrandr --output eDP1 --off --output DP1 --mode 3840x2160 --dpi 163 --rate 29.98; ~/.fehbg"
bindsym $mod+Shift+m exec "xrandr --output eDP1 --auto --dpi 193 --output DP1 --off; ~/.fehbg"
# move windows to other monitor
# xrandr --output eDP1 --auto --output DP4 --auto --right-of eDP1
bindsym $mod+Shift+greater move container to output right
bindsym $mod+Shift+less move container to output left

bindsym $mod+b exec "$HOME/bin/brightness.sh"

# home automation
# node-avcontrol for yamaha
bindsym $mod+bracketleft exec "$HOME/bin/audio/yamaha -d"
bindsym $mod+Shift+bracketleft exec "$HOME/bin/audio/yamaha -D"
bindsym $mod+bracketright exec "$HOME/bin/audio/yamaha -u"
bindsym $mod+Shift+bracketright exec "$HOME/bin/audio/yamaha -U"
bindsym $mod+Down exec "$HOME/bin/audio/yamaha -d"
bindsym $mod+Shift+Down exec "$HOME/bin/audio/yamaha -m"
bindsym $mod+Up exec "$HOME/bin/audio/yamaha -u"
bindsym $mod+Shift+Up exec "$HOME/bin/audio/yamaha -U"

# warpd
bindsym $mod+x exec warpd --hint
bindsym $mod+c exec warpd --normal
bindsym $mod+g exec warpd --grid

# lights
# movie room lights
bindsym $mod+o exec "lampe -s 10 y; lampe -s 9 y"
bindsym $mod+Shift+o exec "lampe -s 10 n; lampe -s 9 n"

# fun
# bindsym $mod+mod1+s exec "RUN_PRESET=true $HOME/bin/animated_bg.sh"
# bindsym $mod+mod1+Shift+s exec "kill `cat $HOME/.cache/mpvbg.pid`"

# misc
bindsym $mod+Ctrl+s exec scrot
bindsym $mod+Ctrl+i exec i3lock -c "000000" # maybe add xss-lock?
# bindsym $mod+Mod1+l exec "xinput --set-prop 'Logitech Rechargeable Touchpad T650' 'libinput Tapping Enabled' 1"
# &> /tmp/i3-quickterm; python -V > /tmp/pyv" --- if it doesn't work, su to root and pip install i3ipc (system python)
#bindsym mod1+grave exec "i3-quickterm shell"

# inits
exec --no-startup-id mullvad connect
exec --no-startup-id nm-applet
#exec --no-startup-id xmodmap $HOME/.xmodmap
#exec --no-startup-id xcape -e "Control_L=Escape;Shift_L=Shift_L|9;Shift_R=Shift_R|0;Super_R=Shift_R|bracketright;Super_L=Shift_L|bracketleft;Print=Shift_R|bracketright;Alt_L=Shift_L|bracketleft" -t 200 # tap ctrl for escape; tap l/r shift for ( and )
#exec --no-startup-id keynav         # control cursor with keyboard
exec --no-startup-id guake          # drop down terminal ala quake console
exec --no-startup-id xflux -z 97203 # less blue light at night
exec --no-startup-id xcompmgr -c -n # compositing manager - transparent term # perhaps switch to picom?
exec --no-startup-id sh ~/.fehbg    # use my feh bg script
exec --no-startup-id parcellite  # dead simple clipboard management (switch to clipit fork?)
#exec --no-startup-id pamac-tray     # pacman tray
#exec --no-startup-id dropbox
# exec --no-startup-id xautolock -time 10 -locker blurlock
exec --no-startup-id tmux start-server
exec --no-startup-id blueman-applet
exec_always --no-startup-id $HOME/.config/polybar/launch.sh
exec --no-startup-id xinput set-prop "PIXA3854:00 093A:0274 Touchpad" "libinput Click Method Enabled" 0 1
exec --no-startup-id xinput set-prop "PIXA3854:00 093A:0274 Touchpad" 'libinput Tapping Enabled' 1
#exec --no-startup-id xinput set-prop 'SynPS/2 Synaptics TouchPad' 'libinput Tapping Enabled' 1
#exec --no-startup-id xinput set-prop 'SynPS/2 Synaptics TouchPad' 'libinput Accel Speed' 1.0
#exec --no-startup-id xinput set-prop 'Logitech Rechargeable Touchpad T650' 'libinput Tapping Enabled' 1
#exec --no-startup-id xinput set-prop 'Logitech Rechargeable Touchpad T650' 'libinput Accel Speed' 1.0
#exec --no-startup-id xinput set-prop 'jonathan austin’s Trackpad' 'libinput Tapping Enabled' 1 # note: literal curly quote because...apple..
#exec --no-startup-id xinput set-prop 'jonathan austin’s Trackpad' 'libinput Accel Speed' 1.0
#exec --no-startup-id xinput set-button-map "Logitech Trackball" 1 3 3
#exec --no-startup-id start-pulseaudio-x11 # change to pulseaudio --start?
exec --no-startup-id /home/jon/.local/bin/spotpris2 # fix spotify's broken mpris
exec_always --no-startup-id /home/jon/.asdf/shims/autotiling # try out autotiling script https://github.com/nwg-piotr/autotiling
exec --no-startup-id dunst # instead of notify-osd
exec --no-startup-id sudo -E auto-cpufreq --daemon
exec --no-startup-id warpd

# from default config
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
#exec --no-startup-id xscreensaver
#exec_always --no-startup-id setcursor

# GUI apps on startup
#exec --no-startup-id $HOME/bin/i3/i3_restore_hack.sh # my hack to restore usual apps on startup

# keyboards
#bindsym $mod+mod1+Shift+m exec "xmodmap $HOME/configs/linux/xmodmap_kinesis; exec notify-send 'kinesis'; pkill xcape; xcape -e 'Control_L=Escape' -t 200"


# i3-gaps
set $mode_gaps Gaps: (o)uter, (i)nner, (h)orizontal, (v)ertical, (t)op, (r)ight, (b)ottom, (l)eft
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_horiz Horizontal Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_verti Vertical Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_top Top Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_right Right Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_bottom Bottom Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_left Left Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym h      mode "$mode_gaps_horiz"
        bindsym v      mode "$mode_gaps_verti"
        bindsym t      mode "$mode_gaps_top"
        bindsym r      mode "$mode_gaps_right"
        bindsym b      mode "$mode_gaps_bottom"
        bindsym l      mode "$mode_gaps_left"
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 1
        bindsym minus gaps outer current minus 1
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 1
        bindsym Shift+minus gaps outer all minus 1
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 1
        bindsym minus gaps inner current minus 1
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 1
        bindsym Shift+minus gaps inner all minus 1
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_horiz" {
        bindsym plus  gaps horizontal current plus 1
        bindsym minus gaps horizontal current minus 1
        bindsym 0     gaps horizontal current set 0

        bindsym Shift+plus  gaps horizontal all plus 1
        bindsym Shift+minus gaps horizontal all minus 1
        bindsym Shift+0     gaps horizontal all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_verti" {
        bindsym plus  gaps vertical current plus 1
        bindsym minus gaps vertical current minus 1
        bindsym 0     gaps vertical current set 0

        bindsym Shift+plus  gaps vertical all plus 1
        bindsym Shift+minus gaps vertical all minus 1
        bindsym Shift+0     gaps vertical all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_top" {
        bindsym plus  gaps top current plus 1
        bindsym minus gaps top current minus 1
        bindsym 0     gaps top current set 0

        bindsym Shift+plus  gaps top all plus 1
        bindsym Shift+minus gaps top all minus 1
        bindsym Shift+0     gaps top all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_right" {
        bindsym plus  gaps right current plus 1
        bindsym minus gaps right current minus 1
        bindsym 0     gaps right current set 0

        bindsym Shift+plus  gaps right all plus 1
        bindsym Shift+minus gaps right all minus 1
        bindsym Shift+0     gaps right all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_bottom" {
        bindsym plus  gaps bottom current plus 1
        bindsym minus gaps bottom current minus 1
        bindsym 0     gaps bottom current set 0

        bindsym Shift+plus  gaps bottom all plus 1
        bindsym Shift+minus gaps bottom all minus 1
        bindsym Shift+0     gaps bottom all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_left" {
        bindsym plus  gaps left current plus 1
        bindsym minus gaps left current minus 1
        bindsym 0     gaps left current set 0

        bindsym Shift+plus  gaps left all plus 1
        bindsym Shift+minus gaps left all minus 1
        bindsym Shift+0     gaps left all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

# Only enable gaps on a workspace when there is at least one container
smart_gaps on
# Activate smart borders (only when there are effectively no gaps)
smart_borders no_gaps

gaps inner 0
